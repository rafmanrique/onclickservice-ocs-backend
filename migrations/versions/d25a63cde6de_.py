"""empty message

Revision ID: d25a63cde6de
Revises: 
Create Date: 2022-05-31 17:12:24.855335

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd25a63cde6de'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('token_blocklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_token_blocklist_jti'), 'token_blocklist', ['jti'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=250), nullable=False),
    sa.Column('email', sa.String(length=250), nullable=False),
    sa.Column('password', sa.String(length=250), nullable=False),
    sa.Column('login_status', sa.Boolean(), nullable=True),
    sa.Column('fecha_registro', sa.Date(), nullable=False),
    sa.Column('tipo_usuario', sa.Enum('General', 'Admin', 'Proveedor', name='tipouser'), nullable=False),
    sa.Column('social', sa.String(length=250), nullable=True),
    sa.Column('cliente_activo', sa.Boolean(), nullable=True),
    sa.Column('proveedor_activo', sa.Boolean(), nullable=True),
    sa.Column('imagen', sa.String(length=250), nullable=True),
    sa.Column('detalle', sa.String(length=250), nullable=True),
    sa.Column('fecha_activacion', sa.Date(), nullable=True),
    sa.Column('direccion', sa.String(length=250), nullable=True),
    sa.Column('telefono', sa.String(length=250), nullable=True),
    sa.Column('avg_evaluacion', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', 'email', 'social', 'telefono', name='debe_tener_una_sola_coincidencia')
    )
    op.create_table('solicitud_edo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status_active', sa.Boolean(), nullable=True),
    sa.Column('num_ref', sa.String(length=250), nullable=False),
    sa.Column('comentarios', sa.String(length=250), nullable=True),
    sa.Column('proveedor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['proveedor_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', 'proveedor_id', 'num_ref', name='debe_tener_una_sola_coincidencia')
    )
    op.create_table('tipo_servicio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status_active', sa.Boolean(), nullable=True),
    sa.Column('nombre_tipo_servicio', sa.Enum('General', 'Plomeria', 'Carpinteria', 'Computacion', 'Albanileria', 'Cocina', 'Limpieza', 'Acondicionado', 'Fumigacion', name='tiposservicio'), nullable=False),
    sa.Column('nombre_tipo_sub_servicio', sa.String(length=250), nullable=False),
    sa.Column('detalle_tipo_servicio', sa.String(length=250), nullable=False),
    sa.Column('proveedor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['proveedor_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', 'proveedor_id', 'nombre_tipo_servicio', 'nombre_tipo_sub_servicio', 'detalle_tipo_servicio', 'status_active', name='debe_tener_una_sola_coincidencia')
    )
    op.create_table('evaluacion_proveedor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comentario', sa.String(length=250), nullable=True),
    sa.Column('evaluate_status', sa.Boolean(), nullable=True),
    sa.Column('resultado_evaluacion', sa.Float(), nullable=False),
    sa.Column('detalle_servicio_id', sa.Integer(), nullable=True),
    sa.Column('cliente_evaluador_id', sa.Integer(), nullable=True),
    sa.Column('proveedor_evaluado_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_evaluador_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['detalle_servicio_id'], ['tipo_servicio.id'], ),
    sa.ForeignKeyConstraint(['proveedor_evaluado_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orden_servicio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contador', sa.Integer(), nullable=True),
    sa.Column('precio_orden', sa.Float(), nullable=True),
    sa.Column('precio_total_orden', sa.Float(), nullable=True),
    sa.Column('status_orden_recibida', sa.Boolean(), nullable=True),
    sa.Column('status_orden_cancelada', sa.Boolean(), nullable=True),
    sa.Column('status_orden_aceptada', sa.Boolean(), nullable=True),
    sa.Column('status_orden_progreso', sa.Boolean(), nullable=True),
    sa.Column('detalle_servicio_id', sa.Integer(), nullable=True),
    sa.Column('cliente_id', sa.Integer(), nullable=True),
    sa.Column('proveedor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['detalle_servicio_id'], ['tipo_servicio.id'], ),
    sa.ForeignKeyConstraint(['proveedor_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orden_servicio')
    op.drop_table('evaluacion_proveedor')
    op.drop_table('tipo_servicio')
    op.drop_table('solicitud_edo')
    op.drop_table('user')
    op.drop_index(op.f('ix_token_blocklist_jti'), table_name='token_blocklist')
    op.drop_table('token_blocklist')
    # ### end Alembic commands ###
